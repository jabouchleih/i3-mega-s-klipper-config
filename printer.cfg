[include fluidd.cfg]
# Klipper configuration file for Anycubic i3 MEGA S

# This config file contains settings of all printer pins (steppers, sensors) for
# Anycubic i3 mega S in the factory configuration 

# Klipper firmware should be compiled for the atmega2560

# Config file includes
#  - Original or 2208(2209) rotated by cabel drivers
#  - Manual meshed bed leveling
#  - 'virtual_sdcard' for fast printing without gaps
#  - Pause/Resume through M600 for filament change

# added BLTouch settings, heavily commented, and updated syntax - clarkkent435 12/26/22; 
# my BLT responds to commands but won't trigger - hoping it's hardware
# also, the "arXX" pin syntax isn't preferred anymore; added an alias table so I could be true to the original config file authors' syntax

# The latest version of the config reference is also available online at:
# https://www.klipper3d.org/Config_Reference.html

# klm 12/26/22 see https://klipper.discourse.group/t/issue-with-bed-mesh-calibration/493/4 for bed size calibration tips

# klm 12/27/22 pin numbers correspond to "port" on Trigorilla Pins refrence PDF, e.g. ar9 = PH6 = H6 = FAN_PIN or D9 (PWM)

# klm 5/29/23 added z_tilt section to fix gantry falling out of level - seems to work to .01

[stepper_x]
step_pin = ar54
dir_pin = !ar55
endstop_pin = ^!ar3
enable_pin = !ar38
position_min = -5
position_endstop = -5
position_max = 220
homing_speed = 30
homing_retract_dist = 5
second_homing_speed = 10
microsteps = 16
rotation_distance = 40

[stepper_y]
step_pin = ar60
dir_pin = ar61
endstop_pin = ^!ar42
enable_pin = !ar56
position_endstop = -20
position_min = -20
position_max = 190
homing_speed = 30
homing_retract_dist = 5
second_homing_speed = 10
microsteps = 16
rotation_distance = 40

[stepper_z]
step_pin = ar46
dir_pin = ar48
endstop_pin: ^!PD3
#position_endstop: 0.0
enable_pin = !ar62
position_max = 205
position_min = -5 #https://www.youtube.com/watch?v=EC7sC86AFxA @ 5:47 (JJShankles)
homing_speed = 5
homing_retract_dist = 5
second_homing_speed = 3
microsteps = 16
rotation_distance = 8

[stepper_z1]
step_pin = ar36
dir_pin = ar34
enable_pin = !ar30
microsteps = 16
rotation_distance = 8
endstop_pin: ^!PL6

[extruder]
step_pin = ar26
dir_pin = ar28
enable_pin = !ar24
heater_pin = ar10
sensor_pin = analog13
sensor_type = ATC Semitec 104GT-2
nozzle_diameter = 0.4
filament_diameter = 1.75
min_temp = 0
max_temp = 280
smooth_time = 1
min_extrude_temp = 170
max_extrude_cross_section = 50
max_extrude_only_distance = 500
max_extrude_only_accel = 3000
microsteps = 16
#measured 5/13/23 klm:  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / <requested_extrude_distance>
rotation_distance = 7.15
#
pressure_advance = 0.51
control = pid
pid_kp = 18.114
pid_ki = 0.557
pid_kd = 147.406

[heater_bed]
heater_pin = PH5 #ar8 HEATER_BED_PIN
sensor_pin = analog14
sensor_type = EPCOS 100K B57560G104F
min_temp = 0
max_temp = 120
smooth_time = 1
#control = pid
#pid_kp = 70.589
#pid_ki = 1.380
#pid_kd = 902.658

[fan]
pin = PH6 #ar9 FAN_PIN
kick_start_time = 0.5
off_below = 0.2

[heater_fan extruder_fan]
pin = PL5 #ar44 FAN2_PIN, E0_AUTO_FAN_PIN
heater = extruder
heater_temp = 50.0
fan_speed = 1.0

[heater_fan stepstick_fan]
# klm 12/27/22 not sure what this is for; pin is legit
pin = PH4 #ar7 CONTROLLER_FAN_PIN
#heater: stepstick
#heater_temp: 50.0
#fan_speed: 1.0

[mcu]
serial = /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0

[bed_screws] #YMMV; https://www.klipper3d.org/Manual_Level.html
screw1 = -5, 5
screw2 = 205, 5
screw3 = 205,180
screw4 = -5, 180

[screws_tilt_adjust] #https://www.klipper3d.org/Manual_Level.html; these need to account for pin offset; as close as I can get
# for use with SCREWS_TILT_CALCULATE
screw1 = -5, 50
screw1_name = front left screw
screw2 = 187, 50
screw2_name = front right screw
screw3 = 187,180
screw3_name = back right screw
screw4 = -5, 180
screw4_name = back left screw
horizontal_move_z = 10.
speed = 50.
screw_thread = CW-M3

[gcode_arcs]
resolution: 1.0

[printer]
kinematics = cartesian
max_accel = 3000
max_accel_to_decel = 1500
max_velocity = 200
max_z_velocity = 10
max_z_accel = 50
square_corner_velocity = 5

[safe_z_home]
home_xy_position = 100,100
speed = 150
z_hop = 5
z_hop_speed = 10

[z_tilt] #klm 5/29/23
z_positions: 
  180,185
  -5,185 
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
points: 
  180,185  
  -5,185 
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 10
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.01
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

[input_shaper]
shaper_freq_x = 96.8
shaper_freq_y = 91.0
shaper_type_x = mzv
shaper_type_y = mzv


[bltouch]
sensor_pin: ^PE4
control_pin: PB5
#set_output_mode: 5V #funktioniert nicht zufriedenstellend
x_offset: -2
y_offset: -25
pin_up_reports_not_triggered: true # erst in klipper testen mit QUERY_PROBE
#z_offset: 0
#probe_with_touch_mode: false #geht nicht 3d touch kann das wohl nicht
pin_move_time: 0.6
stow_on_each_sample: false
samples: 3
samples_tolerance: .03 #how much of a difference there can be before it triggers a retest, there is a default if you don't specify
samples_tolerance_retries: 5 #how many times you want it to retry before failing.



[bed_mesh]
speed: 200
horizontal_move_z: 8
mesh_min: 30,5
mesh_max: 195, 165
probe_count: 3,3
#fade_start: 1.0
#fade_end: 10.0
#fade_target: 0
algorithm = bicubic

[pause_resume]
recover_velocity: 60.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s).  Default is 50.0 mm/s.

# Filament Switch Sensor.  Support for filament insert and runout detection
# using a switch sensor, such as an endstop switch.
[filament_switch_sensor filament_sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
    M118 Filament Runout Detected
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
insert_gcode:
    M118 Filament Load Detected
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode.  It may be useful to
#   increase this delay if Octoprint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: ^!PD2
#   The pin on which the switch is connected. This parameter must be
#   provide

[virtual_sdcard]
path = /home/quinity/printer_data/gcodes

[display_status]

[force_move]

enable_force_move: True
## klm 12/27/22 the following entries provide compatibility for Klipper with G-code produced by Marlin interpreters (like Cura)
# https://github.com/Klipper3d/klipper/blob/master/config/sample-macros.cfg

[gcode_macro M600]
gcode = 
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-150 F1000
	M300 S299 P200
	M300 S299 P200
	M300 S299 P200
	M300 S299 P200
	M300 S299 P200
	RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro START_PRINT] #https://pastebin.com/kDz1uEFy; edits https://klipper.discourse.group/t/start-print-macro-not-extruding-on-primer-lines/4094/2
gcode:
      #Get Printer built volume dimensions
      {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
      {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
      {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}
 
      #Get Nozzle diameter and filament width for conditioning
      {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
      {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}
 
      #Set Start coordinates of priming lines
      {% set X_START = 10.0|default(10.0)|float %}
      {% set Y_START = 20.0|default(20.0)|float %}
 
      #Calculate Primer line extrusion volume and filament length
      {% set PRIMER_WIDTH = 0.75 * NOZZLE %}                    
      {% set PRIMER_HEIGHT = 0.70 * NOZZLE %}           
      {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}    
      {% set PRIMER_VOL = PRIMER_SECT * (X_MAX - 3 * X_START) %}    
      {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0)**2 %}          
      {% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}      
 
      #Get Bed and Extruder temperature from Slicer GCode
      {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
      {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
      #Preheat nozzle and bed
      M104 S{EXTRUDER_TEMP} T0                        
      M140 S{BED_TEMP}                                
 
      #Home
      G28
 
      #Move up to clean bed
      G1 Y{Y_MAX - 20} Z{Z_MAX/4.0} F6000                
 
      #Heat nozzle and bed
      M190 S{BED_TEMP}                               
      M109 S{EXTRUDER_TEMP} T0    

      # Set bed mesh
      BED_MESH_PROFILE LOAD=default
 
      #Precondition extruder
      G92 E0     
      G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F6000.0     
      G1 X{X_MAX - 2 * X_START} Y{Y_START} Z{PRIMER_HEIGHT} E{FILA_LENGTH} F2000.0 
      G1 X{X_MAX - 2 * X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT} E{FILA_LENGTH}
      G1 X{X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT} E{FILA_LENGTH} F2000.0 

      G92 E0            
      G1 Z2.0 F600        
      G1 Z0.2 F600        
      G1 Z2.0 F600
 
[gcode_macro END_PRINT] #https://pastebin.com/kDz1uEFy
gcode:
        #Get Printer built volume dimensions
        {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
        {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
 
        #Fix-up extruder
        G91                                            
        G1 E-2 F2700                                    
        G1 E-1.5 Z0.2 F2400                        
        G1 X5 Y5 F6000                               
        G1 Z10                                     
        G90                                        
 
        #Present print
        G1 Z{printer.toolhead.position.z + 10} F600
        G1 X{X_MAX / 2} Y{Y_MAX} F6000
        M106 S0                                      
        M104 S0                                       
        M140 S0                                 
 
        #Disable Steppers
        M84 X Y E     

        #Music
        M01

[output_pin BEEPER_Pin] #https://www.reddit.com/user/EasyGoing1_1/
pin: PC6
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1

[gcode_macro M300] #https://www.reddit.com/r/klippers/comments/zud092/comment/j38yr09/?context=3
description: Play a tone via M300 P{duration in ms} S{frequency}
gcode:
   {% set S = params.S|default(1000)|int %}; S sets the tone frequency
   {% set P = params.P|default(100)|int %} ; P sets the tone duration
   {% set L = 0.9 %}           ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
   {% if S <= 0 %}             ; dont divide through zero
   {% set F = 1 %}
   {% set L = 0 %}
   {% elif S >= 10000 %}         ;max frequency set to 10kHz
   {% set F = 0 %}
   {% else %}
   {% set F = 1/S %}           ;convert frequency to seconds 
   {% endif %}
       SET_PIN PIN=BEEPER_Pin VALUE={L} CYCLE_TIME={F} ;Play tone
   G4 P{P} ;tone duration
       SET_PIN PIN=BEEPER_Pin VALUE=0
    
[gcode_macro M01] #https://www.reddit.com/r/klippers/comments/zud092/comment/j38yr09/?context=3
description: Play the end print victory tune
gcode:
   M300 P500 S1000
   M300 P500 S1500
   M300 P500 S2005
   M300 P500 S1500
   M300 P500 S2005
   M300 P500 S1500
   M300 P1500 S2005

[gcode_macro FILAMENT_CHANGE]
gcode = 
	SAVE_GCODE_STATE NAME=FILAMENT_CHANGE_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-150 F1000
	RESTORE_GCODE_STATE NAME=FILAMENT_CHANGE_state

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
variable_extrude = 1.0
gcode = 
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
	{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 2.0) %}
	{% set z_safe = 2.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{E} F2100
	G1 Z{z_safe} F900
	G90
	G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing = BASE_RESUME
gcode = 
	
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	
	G91
	G1 E{E} F2100
	RESTORE_GCODE_STATE NAME=PAUSE_state
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
description: "Cancel the running print"
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS

  M220 S100 ;Reset Speed factor override percentage to default (100%)
  M221 S100 ;Reset Extrude factor override percentage to default (100%)

  SAFE_RETRACT
  SAFE_PARK

  M106 S0 ;disable fan

  CANCEL_PRINT_BASE

[exclude_object]

[gcode_macro M486]
gcode = 	
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro UNLOAD_FILAMENT] #https://www.reddit.com/r/klippers/comments/s77yiv/whats_your_process_for_changing_to_a_new_roll_of/
gcode:
   #Preheat nozzle and home  klm 12/28/22 
   M104 S210 T0   
   G28

   M83                            ; set extruder to relative
   G1 X125 Y50 Z80                ; move to servicing position
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-10 F3000                  ; jerk the filament out of the melt zone
   G1 E-400 F1800                  ; retract the rest of the way KLM 3/8/23
   G1 E-100 F900                   ; retract the rest of the way
   M82  

[gcode_macro LOAD_FILAMENT] #https://www.reddit.com/r/klippers/comments/s77yiv/whats_your_process_for_changing_to_a_new_roll_of/
gcode:
   #Preheat nozzle and home  klm 12/28/22 
   M104 S210 T0   
   G28

   M83                            ; set extruder to relative
   G1 E600 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82

[firmware_retraction] #https://github.com/lz00qs/Anycubic_I3_Mega_S_Klipper_Config/blob/main/printer.cfg
retract_length: 6
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 25
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 1
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[gcode_macro Heat_Hotend]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200

[gcode_macro M205]  #https://github.com/Desuuuu/klipper-macros/blob/master/macros/M205.cfg
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro MECHANICAL_GANTRY_CALIBRATION]  ; https://www.reddit.com/r/klippers/comments/oeb87e/can_klipper_macros_implement_mechanical_gantry/
gcode:
   {% set my_current = params.CURRENT|default(0.12)|float %} ; adjust crash current as required without fighting config.
    {% set oldcurrent = printer.configfile.settings["tmc2209 stepper_z"].run_current %} ; TODO: Find runtime current settings
    {% set oldhold = printer.configfile.settings["tmc2209 stepper_z"].hold_current %} 
    {% set x_max = printer.toolhead.axis_maximum.x %} 
    {% set y_max = printer.toolhead.axis_maximum.y %} 
    {% set z_max = printer.toolhead.axis_maximum.z %} 
    
    G28 ; todo query for homed
    G90 ; absolute
    G0 X{x_max / 2} Y{y_max / 2} F8000 ; TODO grab feedrate from config
    G0 Z{z_max} F720 ; go to the Z-max at speed 12*60
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={my_current}
    G4 P200 ; Probably not necessary, it is here just for sure
    FORCE_MOVE STEPPER=stepper_z DISTANCE=10 VELOCITY=6
    G4 P200 ; 
    FORCE_MOVE STEPPER=stepper_z DISTANCE=-4 VELOCITY=6
    G4 P200 ; same as the first one
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={oldcurrent} HOLDCURRENT={oldhold}
    G4 P200 ; same as the first one
    G28 Z

[gcode_macro G34]
gcode:
    MECHANICAL_GANTRY_CALIBRATION

[force_move]
enable_force_move: true ; enable FORCE_MOVE and SET_KINEMATIC_POSITION


[board_pins]
aliases = 
	ar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,
	ar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,
	ar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,
	ar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,
	ar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,
	ar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,
	ar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,
	ar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,
	ar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,
	ar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,
	ar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,
	ar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,
	ar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,
	ar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,
	analog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,
	analog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,
	analog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,
	analog15=PK7,
# Marlin adds these additional aliases
	ml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,
	ml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,
	ml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,
	ml85=PH7

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.526
#*# pid_ki = 1.168
#*# pid_kd = 1125.967
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-1.401000, -1.339333, -1.342667
#*# 	-1.109333, -1.073500, -1.083500
#*# 	-0.885167, -0.896000, -0.941000
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 195.0
#*# min_y = 5.0
#*# max_y = 165.0
#*#
#*# [bltouch]
#*# z_offset = 1.970
#*#
#*# [stepper_z]
#*# position_endstop = -0.310
